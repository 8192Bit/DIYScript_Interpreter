using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;
using static DIYScript_Interpreter.GAME;

using static DIYScript_Interpreter.OBJAddingStatus;

#pragma warning disable IDE1006
//Fxxk u microsoft ide1006 is the silliest suggestion in all of the ides
//they hate a name which generated by itself
//Damnit

namespace DIYScript_Interpreter {
    public partial class OBJMaker : Form {
        public OBJMaker() {
            InitializeComponent();
            checkBox1.Enabled = false;// Just for noob :(
        }

        private void OK_Click(object sender, EventArgs e) {
            if (textBoxOBJName.Text == "") {
                errorProvider.SetError(textBoxOBJName, "抄一百遍名字！");

            } else {
                Int16 StartMode = 0;
                if (radioButton1.Checked) {
                    StartMode = 1;
                    //fixed
                } else if (radioButton2.Checked) {
                    if (!checkBox1.Checked) {
                        StartMode = 2;
                        //any
                    } else {
                        StartMode = 3;
                        //not2overlap
                    }
                } else if (OBJChoose.isAttach) {
                    StartMode = 4;
                }
                if (isEdit) {
                    GAME.Current.EditOBJ
                        (OBJAddingStatus.CurrentOBJID, textBoxOBJName.Text, StartMode,
                         new Int16[] { (short)MouseState[0], (short)MouseState[1] },
                         new Int16[] { (short)MouseState[2], (short)MouseState[3] });
                }

                OBJAddingStatus.CurrentOBJID++;
                GAME.Current.AddOBJ();
                GAME.Current.EditOBJ
                (OBJAddingStatus.CurrentOBJID, textBoxOBJName.Text, StartMode,
                 new Int16[] { (short)MouseState[0], (short)MouseState[1] },
                 new Int16[] { (short)MouseState[2], (short)MouseState[3] });
                Dispose();
            }



        }

        void reDraw(int x1, int y1, int x2, int y2, bool isArea) {
            Bitmap b = new Bitmap(640, 480);
            Point p1 = new Point(x1, y1);
            Graphics g = Graphics.FromImage(b);

            try {
                BG NormalBG = Current.BGList.Find(bg => bg.isNormal == true);
                g.DrawImage(NormalBG.bitmap, new Point(0, 0));
            } catch /*(Exception ex)*/ {

                //MessageBox.Show("默认背景未被设置。\r" + ex.ToString(), "信息", MessageBoxButtons.OK, MessageBoxIcon.Information);

            }
            if (isArea) {
                Pen p = new Pen(Color.Red, 2);
                p.DashStyle = DashStyle.Dash;
                Point p2 = new Point(x2, y2);
                g.DrawLine(p, x1, y1, x2, y1);
                g.DrawLine(p, x1, y1, x1, y2);
                g.DrawLine(p, x2, y1, x2, y2);
                g.DrawLine(p, x1, y2, x2, y2);
            }
            canvas.Image = b;
        }

        private void radioButton2_CheckedChanged(object sender, EventArgs e) {
            checkBox1.Enabled = radioButton2.Checked;
        }

        private void button2_Click(object sender, EventArgs e) {
            Close();
        }

        private void button1_Click(object sender, EventArgs e) {
            Form OBJChooseForm = new OBJChooser();
            OBJChooseForm.Show();
        }

        private void OBJMaker_Load(object sender, EventArgs e) {
            listViewART.View = Properties.Settings.Default.LViewValue;
            Bitmap b = new Bitmap(640, 480);
            Graphics g = Graphics.FromImage(b);
            if (OBJAddingStatus.isEdit) {

            }

            try {
                BG NormalBG = Current.BGList.Find(bg => bg.isNormal == true);
                g.DrawImage(NormalBG.bitmap, new Point(0, 0));
            } catch (Exception ex) {
                //MessageBox.Show("默认背景未被设置。\r" + ex.ToString(), "信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }

            canvas.Image = b;
        }

        private void buttonNewART_Click(object sender, EventArgs e) {
            Animater animator = new Animater();
            animator.Show();
        }

        private void listViewART_SelectedIndexChanged(object sender, EventArgs e) {

        }


        private void textBoxOBJName_TextChanged(object sender, EventArgs e) {
            errorProvider.SetError(textBoxOBJName, null);
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e) {
        }

        private void canvas_MouseDown(object sender, MouseEventArgs e) {

            MouseState[0] = e.X;
            MouseState[1] = e.Y;
            MouseState[4] = 1;
        }

        private void canvas_MouseMove(object sender, MouseEventArgs e) {

            reDraw(MouseState[0], MouseState[1], MouseState[2], MouseState[3], radioButton2.Checked);
            if (MouseState[4] == 1) {

                MouseState[2] = e.X;
                MouseState[3] = e.Y;
            }

            if (Math.Abs(MouseState[2] - MouseState[0]) > 8 | Math.Abs(MouseState[3] - MouseState[1]) > 8) {

                if (MouseState[2] - MouseState[0] > 15) {
                    direction = Directions.e;
                    if (MouseState[3] - MouseState[1] > 15) {
                        direction = Directions.se;
                    } else if (MouseState[3] - MouseState[1] < -15) {
                        direction = Directions.ne;
                    }
                } else if (MouseState[2] - MouseState[0] < -15) {
                    direction = Directions.w;
                    if (MouseState[3] - MouseState[1] > 15) {
                        direction = Directions.sw;
                    } else if (MouseState[3] - MouseState[1] < -15) {
                        direction = Directions.nw;
                    }
                } else {
                    if (MouseState[3] - MouseState[1] > 5) {
                        direction = Directions.s;
                    } else if (MouseState[3] - MouseState[1] < -5) {
                        direction = Directions.n;
                    }
                }
            }
        }//yeek!

        private void canvas_MouseUp(object sender, MouseEventArgs e) {
            MouseState[2] = e.X;
            MouseState[3] = e.Y;
            MouseState[4] = 0;

        }

        private void label4_Click(object sender, EventArgs e) {

        }
    }
}
