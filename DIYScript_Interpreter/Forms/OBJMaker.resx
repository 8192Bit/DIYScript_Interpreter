<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonRefreshART.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiAiIgIiIP/Z
</value>
  </data>
</root>